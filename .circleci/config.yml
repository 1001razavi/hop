version: 2.1

orbs:
  base: dmx-io/base@2.0.88

commands:
  notify-job-status-hop-api:
    description: Send webhook to server about job status
    steps:
      - run:
          name: On success
          when: on_success
          command: |
            [ -n "$WEBHOOK_URL_STATS_WORKER" ] && curl "$WEBHOOK_URL_STATS_WORKER" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"success","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            exit 0
      - run:
          name: On fail
          when: on_fail
          command: |
            [ -n "$WEBHOOK_URL_STATS_WORKER" ] && curl "$WEBHOOK_URL_STATS_WORKER" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"failed","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            exit 0

  notify-job-status-stats-worker:
    description: Send webhook to server about job status
    steps:
      - run:
          name: On success
          when: on_success
          command: |
            [ -n "$WEBHOOK_URL_STATS_WORKER" ] && curl "$WEBHOOK_URL_STATS_WORKER" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"success","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            [ -n "$WEBHOOK_URL_STATS_WORKER_S3" ] && curl "$WEBHOOK_URL_STATS_WORKER_S3" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"success","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            exit 0
      - run:
          name: On fail
          when: on_fail
          command: |
            [ -n "$WEBHOOK_URL_STATS_WORKER" ] && curl "$WEBHOOK_URL_STATS_WORKER" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"failed","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            [ -n "$WEBHOOK_URL_STATS_WORKER_S3" ] && curl "$WEBHOOK_URL_STATS_WORKER_S3" -H "X-Secret: $WEBHOOK_SECRET" -d '{"payload":{"reponame":"'"$CIRCLE_PROJECT_REPONAME"'","branch":"'"$CIRCLE_BRANCH"'","build_parameters":{"CIRCLE_JOB":"'"$CIRCLE_JOB"'"},"outcome":"failed","build_url":"'"$CIRCLE_BUILD_URL"'"}}' -H "Content-Type: application/json" -X POST -i
            exit 0

jobs:
  build-hop-node:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      DOCKER_IMAGE=hopprotocol/hop-node
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk update
            apk upgrade
            apk add bash
            apk add curl
            apk add jq
            apk add py-pip=9.0.0-r1
            apk add diffutils
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            (cd ./packages/hop-node && bash ./ci/package_check.sh)
            docker build \
              -f ./packages/hop-node/Dockerfile \
              --build-arg=GIT_REV=$CIRCLE_SHA1 \
              -t app .
      - deploy:
          name: Push Hop Node Docker image to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            export BRANCH=$(echo $CIRCLE_BRANCH | sed 's/\//-/g' | sed 's/-bonder//g')
            docker tag app $DOCKER_IMAGE:$CIRCLE_SHA1
            docker tag app $DOCKER_IMAGE:$BRANCH
            docker push $DOCKER_IMAGE:$CIRCLE_SHA1
            docker push $DOCKER_IMAGE:$BRANCH
            test $BRANCH == "production" && docker tag app $DOCKER_IMAGE:latest && docker push $DOCKER_IMAGE:latest; true

  build-stats-worker:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      DOCKER_IMAGE=hopprotocol/stats-worker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk update
            apk upgrade
            apk add bash
            apk add curl
            apk add jq
            apk add py-pip=9.0.0-r1
            apk add diffutils
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            cd packages/stats-worker
            bash ./ci/package_check.sh
            docker build \
              -f Dockerfile \
              --no-cache \
              --build-arg=GIT_REV=$CIRCLE_SHA1 \
              -t app .
      - deploy:
          name: Push Hop Stats Worker Docker image to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            export BRANCH=$(echo $CIRCLE_BRANCH | sed 's/\//-/g')
            docker tag app $DOCKER_IMAGE:$CIRCLE_SHA1
            docker tag app $DOCKER_IMAGE:$BRANCH
            docker push $DOCKER_IMAGE:$CIRCLE_SHA1
            docker push $DOCKER_IMAGE:$BRANCH
            test $BRANCH == "stats-worker" && docker tag app $DOCKER_IMAGE:latest && docker push $DOCKER_IMAGE:latest; true
      - notify-job-status-stats-worker

  build-hop-api:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    environment:
      DOCKER_IMAGE=hopprotocol/hop-api
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk update
            apk upgrade
            apk add bash
            apk add curl
            apk add jq
            apk add py-pip=9.0.0-r1
            apk add diffutils
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            cd packages/api
            bash ./ci/package_check.sh
            docker build \
              -f Dockerfile \
              --no-cache \
              --build-arg=GIT_REV=$CIRCLE_SHA1 \
              -t app .
      - deploy:
          name: Push Hop Api Docker image to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            export BRANCH=$(echo $CIRCLE_BRANCH | sed 's/\//-/g')
            docker tag app $DOCKER_IMAGE:$CIRCLE_SHA1
            docker tag app $DOCKER_IMAGE:$BRANCH
            docker push $DOCKER_IMAGE:$CIRCLE_SHA1
            docker push $DOCKER_IMAGE:$BRANCH
            test $BRANCH == "hop-api" && docker tag app $DOCKER_IMAGE:latest && docker push $DOCKER_IMAGE:latest; true
      - notify-job-status-hop-api

workflows:
  my-workflow:
    jobs:
      - build-hop-node:
          filters:
            branches:
              only:
                - production-bonder
                - mainnet-bonder
                - develop-bonder
                - goerli-bonder
                - sepolia-bonder
              ignore: /.*/
      - build-stats-worker:
          filters:
            branches:
              only:
                - stats-worker
              ignore: /.*/
      - build-hop-api:
          filters:
            branches:
              only:
                - hop-api
              ignore: /.*/