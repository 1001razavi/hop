/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        type: "function",
        name: "_settleChallenge",
        inputs: [
            {
                name: "challengeId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "challengeWon",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "acceptSlash",
        inputs: [
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "addToAppeal",
        inputs: [
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "addToChallenge",
        inputs: [
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "appealPeriod",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "bond",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "totalSent",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "attestedCheckpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "challengePeriod",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "challenges",
        inputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "lastUpdated",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "isSettled",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "isAppealed",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "challengeEth",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "appealEth",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "winner",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "confirmCheckpoint",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createChallenge",
        inputs: [
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "forceSettleChallenge",
        inputs: [
            {
                name: "challengeId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "challengeWon",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "fullAppeal",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getChallengeId",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "getFee",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLatestClaim",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "headCheckpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPathId",
        inputs: [
            {
                name: "chainId0",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "token0",
                type: "address",
                internalType: "contract IERC20",
            },
            {
                name: "chainId1",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "token1",
                type: "address",
                internalType: "contract IERC20",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPathInfo",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "",
                type: "address",
                internalType: "contract IERC20",
            },
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "",
                type: "address",
                internalType: "contract IERC20",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getStakedBalance",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWithdrawableBalance",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "recipient",
                type: "address",
                internalType: "address",
            },
            {
                name: "time",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWithdrawableBalance",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initPath",
        inputs: [
            {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
            },
            {
                name: "counterpartChainId",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "counterpartToken",
                type: "address",
                internalType: "contract IERC20",
            },
            {
                name: "dispatcher",
                type: "address",
                internalType: "contract IMessageDispatcher",
            },
            {
                name: "executor",
                type: "address",
                internalType: "contract IMessageExecutor",
            },
            {
                name: "initialSourceReserve",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "initialDestinationReserve",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "attestationFeeRate",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "initRole",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "minStake",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "isCheckpointValid",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "isValid",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isStaked",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "minChallengeIncrease",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "minHopStakeForRole",
        inputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "optimisticallySettleChallenge",
        inputs: [
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "challenger",
                type: "address",
                internalType: "address",
            },
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "penalty",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "slashingData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "postClaim",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "transferId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "head",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "totalSent",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "removeClaim",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "send",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "to",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "minAmountOut",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "attestedCheckpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        outputs: [
            {
                name: "checkpoint",
                type: "bytes32",
                internalType: "bytes32",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "stakeHop",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [
            {
                name: "newOwner",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unstakeHop",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdraw",
        inputs: [
            {
                name: "role",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "staker",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdraw",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "time",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawAll",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                internalType: "bytes32",
            },
            {
                name: "time",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawableEth",
        inputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "TransferBonded",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "transferId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "amountOut",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "totalSent",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "TransferSent",
        inputs: [
            {
                name: "pathId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "transferId",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
            {
                name: "checkpoint",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            {
                name: "to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "attestationFee",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "totalSent",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "nonce",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "attestedCheckpoint",
                type: "bytes32",
                indexed: false,
                internalType: "bytes32",
            },
        ],
        anonymous: false,
    },
];
export class RailsGateway__factory {
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
RailsGateway__factory.abi = _abi;
//# sourceMappingURL=RailsGateway__factory.js.map