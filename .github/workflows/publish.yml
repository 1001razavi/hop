name: Publish Packages to NPM and Docker Hub if Necessary
on:
  push:
    branches:
      - develop
      - production
env:
  BRANCH_NAME: ${{ github.ref_name }}

# TODO: This will not work if some NPM packages in the workspace depend on others. Rethink this.
# TODO: This will publish to Docekr Hub on every push to develop or production. Rethink this.

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Setup workflow
        uses: ./.github/actions/setup

  publish-npm:
    needs: setup
    runs-on: ubuntu-latest
    environment: ${{ env.BRANCH_NAME }}
    strategy:
      matrix:
        package: [sdk]
    steps:
      - name: Check if publish is necessary
        working-directory: packages/${{ matrix.package }}
        run: |
          set -e
          CURRENT_VERSION=$(npm info . --json | jq -r '."dist-tags".latest')
          LOCAL_VERSION=$(jq -r '.version' package.json)
          echo "VERSION_MISMATCH=false" >> $GITHUB_ENV
          if [ "$CURRENT_VERSION" != "$LOCAL_VERSION" ]; then
            echo "VERSION_MISMATCH=true" >> $GITHUB_ENV
          fi

      - name: Install and build package
        if: env.VERSION_MISMATCH == 'true'
        run: |
          pnpm --filter-prod ${{ matrix.package }}... install
          pnpm --filter ${{ matrix.package }}... build

      - name: Publish package
        if: env.VERSION_MISMATCH == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: pnpm --filter ${{ matrix.package }} publish --access public

  publish-docker:
    needs: publish-npm
    runs-on: ubuntu-latest
    environment: ${{ env.BRANCH_NAME }}
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        package: [hop-node, v2-explorer-backend]
    steps:
      - name: Define Docker Tag
        run: |
          set -e
          if [[ "$BRANCH_NAME" == "develop" ]]; then
            echo "DOCKER_TAG=next" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == "production" ]]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "Unsupported branch" >&2
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Publish Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./packages/${{ matrix.package }}/Dockerfile
          build-args: GIT_REV=${{ github.sha }}
          push: true
          tags: ${{ env.DOCKER_TAG }}
