name: Build and Push Explorer Backend Docker Image

on:
  push:
    branches:
      - production-backend
      - goerli-backend
      - sepolia-backend

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Extract branch name
        id: extract_branch
        run: echo "::set-output name=branch::${GITHUB_REF##*/}"

  _build-backend:
    runs-on: ubuntu-latest
    environment: docker
    env:
      DOCKER_IMAGE: hopprotocol/explorer-backend
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build application Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          build-args: GIT_REV=${{ github.sha }}
          tags: app
          load: true
          push: false

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push Explorer Backend Docker image to Docker Hub
        run: |
          BRANCH=${GITHUB_REF##*/}
          BRANCH=$(echo $BRANCH | sed 's/\//-/g' | sed 's/-backend//g')
          docker tag app $DOCKER_IMAGE:${{ github.sha }}
          docker tag app $DOCKER_IMAGE:$BRANCH
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:$BRANCH
          if [ "$BRANCH" == "production" ]; then
            docker tag app $DOCKER_IMAGE:latest
            docker push $DOCKER_IMAGE:latest
          fi

  build-backend:
    needs: [prepare, _build-backend]
    name: Send Backend Status Notification Webhook Request
    uses: ./.github/workflows/status_notify.yml
    with:
      environment: ${{ needs.prepare.outputs.branch_name }}
    secrets:
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
