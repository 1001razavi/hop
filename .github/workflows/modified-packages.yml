name: Get modified packages
on:
  workflow_call:
    inputs:
      package-names:
        description: 'Package names to consider, separated by commas.'
        required: true
        type: string
    outputs:
      modified-packages:
        description: 'Returns all packages that havebeen changed in any way.'
        value: ${{ jobs.modified-packages.outputs.modified-packages }}

jobs:
  modified-packages:
    name: Get modified packages
    runs-on: ubuntu-latest
    outputs:
      modified-packages: ${{ steps.modified-packages.outputs.sanitized_packages }}
    steps:
    - name: Checkout code
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b

    - name: Get modified dirs
      id: modified-dirs
      uses: tj-actions/changed-files@a29e8b565651ce417abb5db7164b4a2ad8b6155c
      with:
        since_last_remote_commit: true
        dir_names: true
        dir_names_max_depth: 2
        separator: ','
        files: ${{ github.event.inputs.paths }}

    - name: Get modified packages
      id: modified-packages
      run: |
        # Get all changed packages without their `package/` prefix
        # Example: packages/hop-node,packages/v2-explorer-backend,packages/frontend
        changed_packages="${{ steps.modified-dirs.outputs.all_changed_files }}"

        # Compare with the input package names
        # Example: packages/hop-node,packages/v2-explorer-backend,
        IFS=":"
        read -a array <<< ${{ inputs.package-names }}
        for element in "${array[@]}"; do
          package_path="packages/$element"
          if [[ $changed_packages == *"$package_path"* ]]; then
            sanitized_packages="$sanitized_packages$element,"
          fi
        done

        # Strip the trailing comma
        # Example: packages/hop-node,packages/v2-explorer-backend
        sanitized_packages="${sanitized_packages%,}"
        
        # Convert from string with commas to array for consumption by matrix
        # Example: ["hop-node", "v2-explorer-backend"]
        sanitized_packages=$(echo $sanitized_packages | tr ',' '\n' | sed 's/^ *//;s/ *$//' | jq -R -s -c 'split("\n")[:-1]')

        echo "sanitized_packages=$sanitized_packages" >> $GITHUB_OUTPUT