name: Publish Packages to NPM
on:
  push:
    branches:
      - production
    paths:
      - 'packages/sdk/**'

jobs:
  publishable-packages:
    name: Check for package that can be published
    uses: ./.github/workflows/publishable-packages.yml
    with:
      package-names: 'sdk'

  publish-sdk:
    name: Publish NPM
    needs: publishable-packages
    if: ${{ fromJson(needs.publishable-packages.outputs.publishable-packages)[0] != '' }}
    runs-on: ubuntu-latest
    # Required for provenance
    permissions:
      id-token: write
    strategy:
      matrix:
        package-name: ${{ fromJson(needs.publishable-packages.outputs.publishable-packages) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b

      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
        with:
          version: 9
          run_install: false

      - name: Setup node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version-file: '.nvmrc'
          registry-url: https://registry.npmjs.org
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install package
        run: |
          pnpm --filter-prod ${{ matrix.package-name }}... install

      - name: Build package
        run: |
          pnpm --filter ${{ matrix.package-name }}... build

      - name: Publish package
        run: NPM_CONFIG_PROVENANCE=true pnpm --filter ${{ matrix.package-name }} publish --publish-branch production --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
